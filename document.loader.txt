pythin.langchain.com document loaders https://python.langchain.com/docs/integrations/document_loaders/


from langchain_community.document_loaders.csv_loader import CSVLoader
  loader = CSVLoader(
    ...  # <-- Integration specific parameters here
)
  data = loader.load()

  //Chat models
  
pip install -qU "langchain[groq]"
  if not os.environ.get("GROQ_API_KEY"):
  os.environ["GROQ_API_KEY"] = getpass.getpass("Enter API key for Groq: ")
  from langchain.chat_models import init_chat_model
  model = init_chat_model("llama3-8b-8192", model_provider="groq")
  model.invoke("Hello, world!")



  //Vector stores A vector store stores embedded data and performs similarity search.
  pip install -qU langchain-openai
  import getpass

  import os
  if not os.environ.get("OPENAI_API_KEY"):
   os.environ["OPENAI_API_KEY"] = getpass.getpass("Enter API key for OpenAI: ")
  from langchain_openai import OpenAIEmbeddings
embeddings = OpenAIEmbeddings(model="text-embedding-3-large")

  pip install -qU langchain-core

  from langchain_core.vectorstores import InMemoryVectorStore
  vector_store = InMemoryVectorStore(embeddings)

#safdsdg
!pip install pypdf
from langchain.document_loaders import PyPDFLoaders
  

  
